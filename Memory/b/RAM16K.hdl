// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:

DMux8Way(in=load,sel=address[12..14],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
RAM4K(in=in,load=a,address=address[0..11],out=outR1);
RAM4K(in=in,load=b,address=address[0..11],out=outR2);
RAM4K(in=in,load=c,address=address[0..11],out=outR3);
RAM4K(in=in,load=d,address=address[0..11],out=outR4);
RAM4K(in=in,load=e,address=address[0..11],out=outR5);
RAM4K(in=in,load=f,address=address[0..11],out=outR6);
RAM4K(in=in,load=g,address=address[0..11],out=outR7);
RAM4K(in=in,load=h,address=address[0..11],out=outR8);
Mux8Way16(a=outR1,b=outR2,c=outR3,d=outR4,e=outR5,f=outR6,g=outR7,h=outR8,sel=address[12..14],out=out);
}